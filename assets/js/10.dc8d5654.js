(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{331:function(t,n,a){"use strict";a.r(n);var s=a(33),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/vuejs/vue"}},[a("img",{attrs:{src:"https://img.shields.io/badge/vue-2.6.11-brightgreen",alt:"vue"}})]),t._v(" "),a("a",{attrs:{href:"https://github.com/vuejs/vue"}},[a("img",{attrs:{src:"https://img.shields.io/badge/antdv-1.5.4-brightgreen",alt:"antdv"}})]),t._v(" "),a("a",{attrs:{href:"https://github.com/vuejs/vue"}},[a("img",{attrs:{src:"https://img.shields.io/badge/release-1.0.0-blue",alt:"release"}})])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/yiptsangkin/near-admin-vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("near-admin"),a("OutboundLink")],1),t._v("是一个基于 "),a("a",{attrs:{href:"https://github.com/vuejs/vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue"),a("OutboundLink")],1),t._v(" 和"),a("a",{attrs:{href:"https://antdv.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("antd"),a("OutboundLink")],1),t._v("的中后台开发框架，支持多页多路由打包，内置了多页打包自定义配置，优化打包vendor，全局快捷键，国际化解决方案（带机翻功能），全局字典，本地mock，动态路由，权限验证等功能，基于"),a("a",{attrs:{href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("typescript"),a("OutboundLink")],1),t._v("，为后期兼容vue3做好铺垫。开发模式上只需要遵循框架约定的动态组件上开发即可，只需要专注于单个组件的开发。这是一个专注于开发者体验和用户体验的中后台开发框架，希望能够有效的提高工作效率。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("near-admin项目本身有一些约定的开发方式，这样子的约定带来的好处就是编码方式上能够有比较好的规范，功能实现起来也更加的便捷，因此在使用near-admin前，你首先需要理解作者的设计思路，下面将通过问答的模式来说明near-admin的设计思路。")])]),t._v(" "),a("h2",{attrs:{id:"设计思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计思想"}},[t._v("#")]),t._v(" 设计思想")]),t._v(" "),a("p",[a("strong",[t._v("1、为什么是antd而不是element？")])]),t._v(" "),a("p",[t._v("实不相瞒，near-admin-vue在2年前最初的版本确实是element，\n但是由于element在组件的丰富度、灵活度以及ui的设计上确实是不及antd（仅代表个人观点），\n因此在vue版本的antd出来之后，作者便开始考虑使用antd来重构这个中后台的开发框架，\n如果你希望有一个element版本的话，\n那么可以来这个"),a("a",{attrs:{href:"https://github.com/yiptsangkin/near-admin-vue/issues/1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Issue#1"),a("OutboundLink")],1),t._v("下面\n发表下你的意见，我会视人数来考虑是否重构，或者有感兴趣希望成为贡献者的话也可以参与进来，因为切换的成本不会特别高，但是需要花一定的时间去实现。")]),t._v(" "),a("p",[a("strong",[t._v("2、为什么near-admin是基于动态组件实现的？")])]),t._v(" "),a("p",[t._v("从一开始，作者对于后台管理需要配置路由就是非常的反感，而目前开源的中后台框架基本上是基于路由的，所以基本不在\n我的考虑范围，因此才着手开始自己设计一个框架，用于满足自己的开发需求，near-admin从初始化项目之后，\n开发者便可以专注于每个页面组件的开发，而不需要再去配置路由，能够有效的提高你的开发效率。")]),t._v(" "),a("p",[a("strong",[t._v("3、为什么near-admin使用的是多页的打包模式？")])]),t._v(" "),a("p",[t._v("严格意义上，near-admin是一个可以打包多页多路由的框架，本质上相当于在一个项目中可以打包多个单页应用，\n于此同时，作者还增加了打包脚本，允许你可以在打包过程中只选择一个或者多个单页应用打包，\n使应用的发布更加的灵活，不需要整体的打包，轻松实现微前端架构。")]),t._v(" "),a("p",[a("strong",[t._v("4、框架本身内置了这么多种语言版本吗？")])]),t._v(" "),a("p",[t._v("框架本身带有机器翻译的脚本（Google Translate），因此使用者只需要维护一个版本的国际化文档内容，\n就可以直接快速的通过机器翻译出多个版本，对于一些翻译准确度没有非常高的国际化系统，非常的方便。")]),t._v(" "),a("p",[a("strong",[t._v("5、从github拉下来的源码就可以直接进行二次开发了吗？")])]),t._v(" "),a("p",[t._v("是的，github源码本身就是最基本的版本，不会有比较多冗余的第三方插件，可以放心使用。")]),t._v(" "),a("p",[t._v("near-admin从一开始就以开发效率为最终目标，帮助用户更加快速的搭建一个管理系统，同时基于动态组件的模式，一个标签页就是一个单独的页面，\n当然也支持单独配置路由，对于一些外部系统想要嵌入页面也比较方便，near-admin将框架自身的代码文件均维护在core中，如果需要升级框架只需要\n替换core文件夹中的代码，做到最低程度的修改。")]),t._v(" "),a("h2",{attrs:{id:"约定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#约定"}},[t._v("#")]),t._v(" 约定")]),t._v(" "),a("h4",{attrs:{id:"_1、不要动core里面的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、不要动core里面的内容"}},[t._v("#")]),t._v(" 1、不要动core里面的内容")]),t._v(" "),a("p",[t._v("core文件夹中是框架层面的代码，因此不要改动，主要是以后版本更新方面，只需要替换简单的整体替换core即可。")]),t._v(" "),a("h4",{attrs:{id:"_2、创建单个单页应用的目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建单个单页应用的目录结构"}},[t._v("#")]),t._v(" 2、创建单个单页应用的目录结构")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("├── auth                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 多页名")]),t._v("\n    ├── App.vue          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实例")]),t._v("\n    ├── auth.ts          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 入口文件")]),t._v("\n    ├── component        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 组件")]),t._v("\n    ├── page.config.json "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 页面配置（用于引入js和css）")]),t._v("\n    ├── router           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 路由")]),t._v("\n    │   └── auth.ts\n    └── view             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# view层的组件")]),t._v("\n")])])]),a("p",[t._v("这是一个单页应用的目录结构，包含了实例、入口文件、组件文件夹、页面配置json、路由以及view层的组件内容，需要注意的是入口文件的命名需要跟单页应用的命名一致，即auth.ts，写法跟单页应用基本一致。")]),t._v(" "),a("h4",{attrs:{id:"_3、api需要维护在api的文件夹中，并按照实际进行合理的拆分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、api需要维护在api的文件夹中，并按照实际进行合理的拆分"}},[t._v("#")]),t._v(" 3、api需要维护在api的文件夹中，并按照实际进行合理的拆分")]),t._v(" "),a("p",[t._v("考虑到地址和方法的修改，这里建议分成apiUrl和apiMethod两个文件，具体可以参考框架自带的登录页和管理页的api写法。")]),t._v(" "),a("h4",{attrs:{id:"_4、雪碧图icon维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、雪碧图icon维护"}},[t._v("#")]),t._v(" 4、雪碧图icon维护")]),t._v(" "),a("p",[t._v("对于要合成雪碧图的icon，请丢在assets/images/icon目录中，框架会自动帮你打包生成css和图片")]),t._v(" "),a("h4",{attrs:{id:"_5、view中的组件都需要mixin-corebase和base两个组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、view中的组件都需要mixin-corebase和base两个组件"}},[t._v("#")]),t._v(" 5、view中的组件都需要mixin CoreBase和Base两个组件")]),t._v(" "),a("p",[t._v("一些页面通用的方法可以放到其中维护，在没有模板的情况下大家可以在webstorm中配置对应的模板，这样创建新的页面的时候就不会担心漏掉了")]),t._v(" "),a("h4",{attrs:{id:"_6、字典维护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、字典维护"}},[t._v("#")]),t._v(" 6、字典维护")]),t._v(" "),a("p",[t._v("在我们实际项目的开发过程中，我们经常会使用到一些字典值，例如一些通用查询的查询字段，这些我们都不推荐直接在代码中写，因为这样子万一多个地方都使用到，\n后期的修改成本非常的大，因此我们推进在assets/ts/custom/dict.ts中维护你需要用到的字典值。框架本身已经在webpack构建中全局引入了dict和config，因此在编写\n过程中可以省略引入的操作。")]),t._v(" "),a("h2",{attrs:{id:"功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能"}},[t._v("#")]),t._v(" 功能")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("- 基础功能\n\n  - 支持TypeScript\n  - 自带登录页、系统管理页\n  - 支持api host，本地mock，快捷键，面包屑，缓存，国际化等多种个性化配置\n  - 页面权限、指令权限\n  - 单页打包、多页打包、多环境打包\n  - 前端日志\n  - 后端、本地mock\n  - 动态侧边栏、面包屑\n  - ScreenFull全屏\n  - 同名组件各自缓存\n  - 自动拼接雪碧图\n  - 自适应收缩侧边栏\n  - 支持标签页、支持动态路由生成独立页面\n  - 支持机翻所有国际化语音\n  - 支持全局快捷键配置\n\n- 内置组件\n\n  - 可根据key缓存的KeepAlive组件 - NKeepAlive\n  - 快捷通用表单组件 - NCommonTable\n  - 通用搜索面板组件 - NSearchPanel\n  - 通用国际化选择组件 - NLangPicker\n  - 通用title组件 - NCommonTitle\n  - 后续会继续完善\n\n")])])]),a("h2",{attrs:{id:"目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),a("p",[t._v("near-admin项目已经为开发者设计好中后台开发框架基本的框架结构，开发者只需要按照约定的内容进行开发即可，以下是项目的具体结构。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("├── babel.config.js         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# babel配置")]),t._v("\n├── cypress.json            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cypress配置")]),t._v("\n├── package.json            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# package.json")]),t._v("\n├── tsconfig.json           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tsconfig")]),t._v("\n├── tslint.json             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# tslint")]),t._v("\n└── vue.config.js           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vue配置")]),t._v("\n├── build                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建相关")]),t._v("\n├── public                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 静态资源")]),t._v("\n├── script                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 脚本、模板")]),t._v("\n├── src                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 源代码")]),t._v("\n│   ├── assets              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 静态资源")]),t._v("\n│   │   ├── css             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# css")]),t._v("\n│   │   ├── font            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 字体")]),t._v("\n│   │   ├── images          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 图片")]),t._v("\n│   │   ├── js              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# js")]),t._v("\n│   │   ├── scss            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# scss")]),t._v("\n│   │   └── ts              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ts")]),t._v("\n│   ├── core                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 框架核心内容")]),t._v("\n│   │   ├── assets          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 核心静态资源")]),t._v("\n│   │   ├── component       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 核心组件")]),t._v("\n│   │   └── store           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 核心全局状态")]),t._v("\n│   ├── mock                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mock数据")]),t._v("\n│   ├── pages               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 页面")]),t._v("\n│   │   ├── auth            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 登录单页应用")]),t._v("\n│   │   └── manage          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 管理单页应用")]),t._v("\n│   └── store               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 全局状态")]),t._v("\n└── tests                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试用例")]),t._v("\n")])])]),a("h2",{attrs:{id:"开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开发"}},[t._v("#")]),t._v(" 开发")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clone the project from github")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/yiptsangkin/near-admin-vue.git\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# enter the project directory")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" near-admin-vue\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# install dependency")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# run application with all pages")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run serve\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# run application with single page and pick target entry")]),t._v("\nnpmr run single:serve\n\n? Pick target entry ›  \n◯   auth\n◯   manage\n")])])]),a("h2",{attrs:{id:"构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[t._v("#")]),t._v(" 构建")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# build application with all pages")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# uat")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run uat:build\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run dev:build\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# prod")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run prod:build\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# build application with single page")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run single:build\n\n? Pick target entry ›  \n◯   auth\n◯   manage\n\n? Pick target environment › - Use arrow-keys. Return to submit.\n❯   prod\n    uat\n    dev\n\n? Pick clean dist or not › - Use arrow-keys. Return to submit.\n❯   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v("\n    no\n")])])]),a("p",[t._v("在本地运行成功后，点击目录中的运行的界面（如果是所有单页应用的话），如果看到如下的界面，代表项目已经初始化成功了。")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/doc/login.png")}}),t._v(" "),a("h2",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[t._v("#")]),t._v(" 工具")]),t._v(" "),a("p",[t._v("near-admin内置了机器翻译，对于有国际化要求的用户可以通过script中的脚本对基础字典进行翻译，快速实现国际化。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# translate")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run translate\n\n? Pick target language ›  \n◯   ar_EG\n◯   bg_BG\n◯   ca_ES\n◯   cs_CZ\n◯   da_DK\n◯   de_DE\n◯   el_GR\n◯   en_US\n◯   es_ES\n◯ ↓ et_EE\n\n")])])]),a("h2",{attrs:{id:"contribution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contribution"}},[t._v("#")]),t._v(" Contribution")]),t._v(" "),a("p",[t._v("本文档项目地址 "),a("a",{attrs:{href:"https://github.com/yiptsangkin/near-admin-vue-doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("near-admin-vue-doc"),a("OutboundLink")],1),t._v(" 基于vuepress开发。")]),t._v(" "),a("p",[t._v("有任何修改和建议都可以该项目pr和issue。")]),t._v(" "),a("p",[t._v("near-admin-vue目前还在持续开发，不断完善A端不同业务场景下的组件需求，也希望有意向的朋友们能够参与到这个项目的开发中。")]),t._v(" "),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://yiptsangkin.github.io/auth",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线预览"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://gitter.im/near-admin-vue/community",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitter 讨论组"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://jq.qq.com/?_wv=1027&k=NenTtP1C",target:"_blank",rel:"noopener noreferrer"}},[t._v("QQ群(1091431440)"),a("OutboundLink")],1),t._v(" 入群请备注<<行业+企业+姓名>>")])])])}),[],!1,null,null,null);n.default=e.exports}}]);