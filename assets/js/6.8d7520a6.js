(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{327:function(s,t,a){"use strict";a.r(t);var e=a(33),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"构建发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建发布"}},[s._v("#")]),s._v(" 构建发布")]),s._v(" "),a("h2",{attrs:{id:"构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[s._v("#")]),s._v(" 构建")]),s._v(" "),a("p",[s._v("near-admin的构建相对来说比较灵活，可以支持不同环境的构建，同时也还支持单独构建工程中的某个单页应用，发布应用的时候不再需要整体打包。从package.json中\n我们可以看到在本地运行和在构建方面near-admin都提供了比较丰富的指令。")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"serve"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-cli-service serve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"serve:translate"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node script/translate.js && vue-cli-service serve"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"translate"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node script/translate.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"create:page"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node script/newpage"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-cli-service build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"uat:build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env BUILD_ENV=uat vue-cli-service build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prod:build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env BUILD_ENV=prod vue-cli-service build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"analyze:build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env ANALYZE=true vue-cli-service build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"single:build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node script/singleoperate.js build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"single:serve"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node script/singleoperate.js serve"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])])]),a("p",[s._v("其中我们常用的指令是"),a("code",[s._v("npm run serve")]),s._v("，这个指令可以在本地运行整个工程，即工程中"),a("code",[s._v("auth")]),s._v("、"),a("code",[s._v("manage")]),s._v("等单页应用将会同时构建编译，如果我们有的时候不想要\n在本地同时运行两个单页应用，即可通过"),a("code",[s._v("npm run single:serve")]),s._v("来选择你要运行的单页应用，加快编译的速度。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("? Pick target entry ›  \n◉   auth\n◯   manage\n")])])]),a("p",[s._v("例如这里我选择了只编译"),a("code",[s._v("auth")]),s._v("这个单页应用，那么我们从浏览器里面就只能访问"),a("code",[s._v("/auth/login")]),s._v("，访问"),a("code",[s._v("/manage")]),s._v("则显示空白。")]),s._v(" "),a("p",[s._v("同理，构建也支持单独构建某一个单页应用，这样就可以在发布的时候只更新某一个单页应用的内容。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("需要注意的是，在使用"),a("code",[s._v("npm run single:build")]),s._v("构建的时候，需要选择是否清空dist文件夹，如果你是想要增量发布某一个单页，而不影响之前发布的其他单页应用的内容，\n请选择不要清空，这样直接整个替换dist就可以了。")])]),s._v(" "),a("h2",{attrs:{id:"环境选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境选择"}},[s._v("#")]),s._v(" 环境选择")]),s._v(" "),a("p",[s._v("正如前面mock中提到的，构建不同的环境，我们只需要在build/config.js中增加对应的环境，并且到package.json中增加相应的脚本即可。near-admin默认\n了"),a("code",[s._v("dev")]),s._v(" "),a("code",[s._v("uat")]),s._v(" "),a("code",[s._v("prod")]),s._v("这三个环境，所以，在package.json中增加了一下三个命令：")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue-cli-service build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"uat:build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env BUILD_ENV=uat vue-cli-service build"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prod:build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env BUILD_ENV=prod vue-cli-service build"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("可以看到其实就是按照BUILD_ENV这个参数对打包环境进行区分，由于windows和unix等环境命令行不太一致，因此需要通过cross-env的插件来实现命令行的兼容，\n所以如果需要增加环境，除了在build/config.js中增加相应的环境外，还需要在这里加多一个指令，例如，我们要增加一个"),a("code",[s._v("sit")]),s._v("的环境，就这么写：")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"sit:build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env BUILD_ENV=sit vue-cli-service build"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"分析构建体积"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析构建体积"}},[s._v("#")]),s._v(" 分析构建体积")]),s._v(" "),a("p",[s._v("一般来说，通过near-admin这种架构，构建出来的文件一般不会存在单文件比较大的情况，再加上gzip的压缩，基本上是可以忽略的白屏体验，但是框架还是提供了\n利用构建分析插件来帮助大家进行构建优化。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run analyze:build\n")])])]),a("img",{attrs:{src:s.$withBase("/images/doc/package.png")}}),s._v(" "),a("p",{attrs:{align:"center"}},[s._v("构建分析")]),s._v(" "),a("h2",{attrs:{id:"服务端发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端发布"}},[s._v("#")]),s._v(" 服务端发布")]),s._v(" "),a("p",[s._v("构建完成后，输出的文档就在根目录的dist文件夹中，理论上我们把里面的文件随便丢到一个web服务器就大功告成了，但是这里面以下三点需要注意。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("作者推荐使用nginx作为web服务，其他的web服务应用也同理进行处理就可以了（因为电脑没有搞其他的，所以例子就用nginx的）。")])]),s._v(" "),a("h3",{attrs:{id:"_1、路由模式的选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、路由模式的选择"}},[s._v("#")]),s._v(" 1、路由模式的选择")]),s._v(" "),a("p",[s._v("vue-router的路由支持两种模式，一种是history，一种是默认hash，near-admin官方推荐是使用history模式，当然，如果你喜欢#号这种的话也可以，修改\n方面只需要到对应单页的router里面修改对应想要的mode即可。")]),s._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/pages/auth/router/index.ts")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" routerOpt"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RouterOptions "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'history'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  modify here")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"_2、html后缀处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、html后缀处理"}},[s._v("#")]),s._v(" 2、html后缀处理")]),s._v(" "),a("p",[s._v("修改完成后，由于是多页模式，因此在一般的web服务配置下，是需要带上.html后缀才能够访问的，例如：")]),s._v(" "),a("p",[a("code",[s._v("http://localhost/auth.html")])]),s._v(" "),a("p",[s._v("因此我们需要修改nginx的配置，将其修改为支持不带html后缀访问。(大家可以在本地安装nginx进行测试)")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8004")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server_name  localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    root /Users/administrator/Documents/project/open-source/near-admin-vue/dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        try_files "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$uri")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$uri")]),s._v("/ "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$uri")]),s._v(".html?"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("这里我配置了8004端口的服务，然后根目录是我们构建出来的地址，这里使用了try_files兼容了不带html后缀的访问，运行nginx，在浏览器中访问")]),s._v(" "),a("p",[a("code",[s._v("http://localhost:8004/auth")])]),s._v(" "),a("img",{attrs:{src:s.$withBase("/images/doc/publish.png")}}),s._v(" "),a("p",{attrs:{align:"center"}},[s._v("发布")]),s._v(" "),a("p",[s._v("可以看到我们能够成功访问对应的前端页面，但是有一个问题，就是如果你进行刷新操作，你会发现页面将无法进行访问，这是因为nginx没办法访问到auth/login和auth/login.html\n这两个地址，因此会提示500错误，主要是因为使用了后端服务的路由。所以遇到这个情况，有两种解决方式，首先我们先看第一种，就是使用hash的模式，我们修改下工程中项目对应的\nrouter，改为hash模式并重新打包。构建完成后我们重新访问。")]),s._v(" "),a("p",[a("code",[s._v("http://localhost:8004/auth")])]),s._v(" "),a("p",[s._v("你会发现访问地址变成了")]),s._v(" "),a("p",[a("code",[s._v("http://localhost:8004/auth#/login")])]),s._v(" "),a("p",[s._v("而且进行刷新并没出现错误的现象，这是因为vue-router通过hash模式进入了前端的路由控制。如果不追求地址栏的洁癖，那么你的发布就此完成，可以进行使用啦！")]),s._v(" "),a("h3",{attrs:{id:"_3、history模式下刷新问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、history模式下刷新问题"}},[s._v("#")]),s._v(" 3、history模式下刷新问题")]),s._v(" "),a("p",[s._v("如果你追求地址栏没有#号的话，则可以在nginx中增加兼容history的配置。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8004")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server_name  localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    root /Users/administrator/Documents/project/open-source/near-admin-vue/dist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    location ~/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(".*?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        port_in_redirect off"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        index /"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(".html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        try_files "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$uri")]),s._v(" /"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(".html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("这里通过修改匹配到地址的第一项内容，即单页应用的应用名来识别访问哪一个html文件，加上这个配置之后，我们重新访问history模式构建出来的包，可以看到，\n即使刷新也能够正常访问，这样，应用的发布就大功告成啦！")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("作者本人强烈推荐用history模式吧，如果使用的是hash模式的话，可能auth里面的一些跳转开发者们需要注意下自行进行修改")])])])}),[],!1,null,null,null);t.default=n.exports}}]);